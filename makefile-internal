# include .env file and export its env vars
# (-include to ignore error if it does not exist)
include .env

# Default values
# You can override it with .env or by passing it as a parameter to a target
CRON_LIBRARY_ADDRESS = 0xCccCCCCcccCCcCccccCC00000000000000000000

.SILENT:
.PHONY: fct-install-dependencies fct-build-artifacts fct-build-ocr-helper

# Install Forge dependencies.
fct-install-dependencies:
	forge install foundry-rs/forge-std --no-git --no-commit; \
	forge install smartcontractkit/chainlink-brownie-contracts@0.8.0 --no-git --no-commit; \
	forge install smartcontractkit/chainlink-testing-framework@v1.11.5 --no-git --no-commit; \
	forge install OpenZeppelin/openzeppelin-contracts@v4.8.2 --no-git --no-commit

# Build Chainlink contracts artifacts.
fct-build-artifacts:
	printf "%s\n" "Building Chainlink contracts..."; \
	forge build --contracts ./contracts/v0.4.25 --skip script test --names --use solc:0.4.25; \
	forge build --contracts ./contracts/v0.6.6 --skip script test --names --use solc:0.6.6; \
	forge build --contracts ./contracts/v0.7.6 --skip script test --names --use solc:0.7.6; \
	forge build --contracts ./contracts/v0.8.6 --skip script test --names --use solc:0.8.6 --libraries "@chainlink/v0.8/automation/libraries/external/Cron.sol:Cron:$(CRON_LIBRARY_ADDRESS)"; \
	forge build --contracts ./contracts/v0.8.16 --skip script test --names --use solc:0.8.16; \
	forge build --contracts ./contracts/v0.8.19 --skip script test --names --use solc:0.8.19; \

	printf "%s\n" "Done";

# Build external libraries.
fct-build-ocr-helper:
	cd ./external/OCRHelper && go build -o bin/ocr-helper
