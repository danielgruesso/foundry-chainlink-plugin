{"abi":[{"type":"function","name":"getBlockhash","inputs":[{"name":"n","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"store","inputs":[{"name":"n","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"storeEarliest","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"storeVerifyHeader","inputs":[{"name":"n","type":"uint256","internalType":"uint256"},{"name":"header","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x608060405234801561001057600080fd5b506102e2806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636057361d1461005157806383b6d6b714610070578063e9413d3814610078578063fadff0e1146100a7575b600080fd5b61006e6004803603602081101561006757600080fd5b5035610154565b005b61006e6101b0565b6100956004803603602081101561008e57600080fd5b50356101bf565b60408051918252519081900360200190f35b61006e600480360360408110156100bd57600080fd5b813591908101906040810160208201356401000000008111156100df57600080fd5b8201836020820111156100f157600080fd5b8035906020019184600183028401116401000000008311171561011357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610226945050505050565b80408061019e576040805162461bcd60e51b8152602060048201526013602482015272189b1bd8dada185cda0a1b8a4819985a5b1959606a1b604482015290519081900360640190fd5b60009182526020829052604090912055565b6101bd6101004303610154565b565b60008181526020819052604081205480610220576040805162461bcd60e51b815260206004820152601c60248201527f626c6f636b68617368206e6f7420666f756e6420696e2073746f726500000000604482015290519081900360640190fd5b92915050565b60008083600101815260200190815260200160002054818051906020012014610296576040805162461bcd60e51b815260206004820152601c60248201527f6865616465722068617320756e6b6e6f776e20626c6f636b6861736800000000604482015290519081900360640190fd5b602401516000918252602082905260409091205556fea2646970667358221220b28c8141b44359d70d3796be11fbe0e2d11b89e72289c84a1f4cd203b37392cc64736f6c63430006060033","sourceMap":"544:2495:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;544:2495:1;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80636057361d1461005157806383b6d6b714610070578063e9413d3814610078578063fadff0e1146100a7575b600080fd5b61006e6004803603602081101561006757600080fd5b5035610154565b005b61006e6101b0565b6100956004803603602081101561008e57600080fd5b50356101bf565b60408051918252519081900360200190f35b61006e600480360360408110156100bd57600080fd5b813591908101906040810160208201356401000000008111156100df57600080fd5b8201836020820111156100f157600080fd5b8035906020019184600183028401116401000000008311171561011357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610226945050505050565b80408061019e576040805162461bcd60e51b8152602060048201526013602482015272189b1bd8dada185cda0a1b8a4819985a5b1959606a1b604482015290519081900360640190fd5b60009182526020829052604090912055565b6101bd6101004303610154565b565b60008181526020819052604081205480610220576040805162461bcd60e51b815260206004820152601c60248201527f626c6f636b68617368206e6f7420666f756e6420696e2073746f726500000000604482015290519081900360640190fd5b92915050565b60008083600101815260200190815260200160002054818051906020012014610296576040805162461bcd60e51b815260206004820152601c60248201527f6865616465722068617320756e6b6e6f776e20626c6f636b6861736800000000604482015290519081900360640190fd5b602401516000918252602082905260409091205556fea2646970667358221220b28c8141b44359d70d3796be11fbe0e2d11b89e72289c84a1f4cd203b37392cc64736f6c63430006060033","sourceMap":"544:2495:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;544:2495:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;799:140:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;799:140:1;;:::i;:::-;;1043:70;;;:::i;2864:173::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2864:173:1;;:::i;:::-;;;;;;;;;;;;;;;;1483:1202;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1483:1202:1;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;1483:1202:1;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1483:1202:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1483:1202:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1483:1202:1;;-1:-1:-1;1483:1202:1;;-1:-1:-1;;;;;1483:1202:1:i;799:140::-;850:12;;876:8;868:40;;;;;-1:-1:-1;;;868:40:1;;;;;;;;;;;;-1:-1:-1;;;868:40:1;;;;;;;;;;;;;;;914:13;:16;;;;;;;;;;;:20;799:140::o;1043:70::-;1083:25;1104:3;1089:12;:18;1083:5;:25::i;:::-;1043:70::o;2864:173::-;2920:7;2947:16;;;;;;;;;;;2977:8;2969:49;;;;;-1:-1:-1;;;2969:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;3031:1;2864:173;-1:-1:-1;;2864:173:1:o;1483:1202::-;1584:13;:20;1598:1;1602;1598:5;1584:20;;;;;;;;;;;;1573:6;1563:17;;;;;;:41;1555:82;;;;;-1:-1:-1;;;1555:82:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2481:2;2469:15;2463:22;2408:18;2651:16;;;;;;;;;;;:29;1483:1202::o","linkReferences":{}},"methodIdentifiers":{"getBlockhash(uint256)":"e9413d38","store(uint256)":"6057361d","storeEarliest()":"83b6d6b7","storeVerifyHeader(uint256,bytes)":"fadff0e1"},"rawMetadata":"{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"getBlockhash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storeEarliest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"storeVerifyHeader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getBlockhash(uint256)\":{\"params\":{\"n\":\"the number of the block whose blockhash should be returned\"}},\"store(uint256)\":{\"params\":{\"n\":\"the number of the block whose blockhash should be stored\"}},\"storeVerifyHeader(uint256,bytes)\":{\"params\":{\"header\":\"the rlp-encoded blockheader of block n+1. We verify its correctness by checking  that it hashes to a stored blockhash, and then extract parentHash to get the n-th blockhash.\",\"n\":\"the number of the block whose blockhash should be stored\"}}},\"title\":\"BlockhashStore\"},\"userdoc\":{\"methods\":{\"getBlockhash(uint256)\":{\"notice\":\"gets a blockhash from the store. If no hash is known, this function reverts.\"},\"store(uint256)\":{\"notice\":\"stores blockhash of a given block, assuming it is available through BLOCKHASH\"},\"storeEarliest()\":{\"notice\":\"stores blockhash of the earliest block still available through BLOCKHASH.\"},\"storeVerifyHeader(uint256,bytes)\":{\"notice\":\"stores blockhash after verifying blockheader of child/subsequent block\"}},\"notice\":\"This contract provides a way to access blockhashes older than  the 256 block limit imposed by the BLOCKHASH opcode.  You may assume that any blockhash stored by the contract is correct.  Note that the contract depends on the format of serialized Ethereum  blocks. If a future hardfork of Ethereum changes that format, the   logic in this contract may become incorrect and an updated version   would have to be deployed.\"}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.6/dev/BlockhashStore.sol\":\"BlockhashStore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.6/dev/BlockhashStore.sol\":{\"keccak256\":\"0x3c03a9132a71f7764543dcf47eb22b8d0a5885deec483c6c3b88a3b6db81819b\",\"urls\":[\"bzz-raw://b3aa93c58529cb1effe9f7d61472d00eca355aee19cd20fff8b4e0b92cbf67f8\",\"dweb:/ipfs/QmcKHKzNNJEVfG7NtLVG8xLY3UnaoxiVnV8keoVPNxuZsf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.6.6+commit.6c089d02"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"stateMutability":"view","type":"function","name":"getBlockhash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"storeEarliest"},{"inputs":[{"internalType":"uint256","name":"n","type":"uint256"},{"internalType":"bytes","name":"header","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"storeVerifyHeader"}],"devdoc":{"methods":{"getBlockhash(uint256)":{"params":{"n":"the number of the block whose blockhash should be returned"}},"store(uint256)":{"params":{"n":"the number of the block whose blockhash should be stored"}},"storeVerifyHeader(uint256,bytes)":{"params":{"header":"the rlp-encoded blockheader of block n+1. We verify its correctness by checking  that it hashes to a stored blockhash, and then extract parentHash to get the n-th blockhash.","n":"the number of the block whose blockhash should be stored"}}}},"userdoc":{"methods":{"getBlockhash(uint256)":{"notice":"gets a blockhash from the store. If no hash is known, this function reverts."},"store(uint256)":{"notice":"stores blockhash of a given block, assuming it is available through BLOCKHASH"},"storeEarliest()":{"notice":"stores blockhash of the earliest block still available through BLOCKHASH."},"storeVerifyHeader(uint256,bytes)":{"notice":"stores blockhash after verifying blockheader of child/subsequent block"}}}},"settings":{"remappings":["@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/src/","@openzeppelin/=lib/openzeppelin-contracts/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/chainlink-brownie-contracts/contracts/src/v0.6/dev/BlockhashStore.sol":"BlockhashStore"},"libraries":{}},"sources":{"lib/chainlink-brownie-contracts/contracts/src/v0.6/dev/BlockhashStore.sol":{"keccak256":"0x3c03a9132a71f7764543dcf47eb22b8d0a5885deec483c6c3b88a3b6db81819b","urls":["bzz-raw://b3aa93c58529cb1effe9f7d61472d00eca355aee19cd20fff8b4e0b92cbf67f8","dweb:/ipfs/QmcKHKzNNJEVfG7NtLVG8xLY3UnaoxiVnV8keoVPNxuZsf"],"license":null}},"version":1},"ast":{"absolutePath":"lib/chainlink-brownie-contracts/contracts/src/v0.6/dev/BlockhashStore.sol","id":105,"exportedSymbols":{"BlockhashStore":[104]},"nodeType":"SourceUnit","src":"32:3008:1","nodes":[{"id":4,"nodeType":"PragmaDirective","src":"32:22:1","nodes":[],"literals":["solidity","0.6",".6"]},{"id":104,"nodeType":"ContractDefinition","src":"544:2495:1","nodes":[{"id":9,"nodeType":"VariableDeclaration","src":"573:47:1","nodes":[],"constant":false,"mutability":"mutable","name":"s_blockhashes","overrides":null,"scope":104,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":8,"keyType":{"id":6,"name":"uint","nodeType":"ElementaryTypeName","src":"581:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"573:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueType":{"id":7,"name":"bytes32","nodeType":"ElementaryTypeName","src":"589:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"value":null,"visibility":"internal"},{"id":35,"nodeType":"FunctionDefinition","src":"799:140:1","nodes":[],"body":{"id":34,"nodeType":"Block","src":"832:107:1","nodes":[],"statements":[{"assignments":[16],"declarations":[{"constant":false,"id":16,"mutability":"mutable","name":"h","nodeType":"VariableDeclaration","overrides":null,"scope":34,"src":"838:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"838:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":20,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":18,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"860:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":17,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"850:9:1","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"850:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"838:24:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":22,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"876:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":23,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"881:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"876:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"626c6f636b68617368286e29206661696c6564","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"886:21:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_018c9368d3518fca10542b03ac3f8a0575431fdef701551b9b0b9e98d6f30ce0","typeString":"literal_string \"blockhash(n) failed\""},"value":"blockhash(n) failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_018c9368d3518fca10542b03ac3f8a0575431fdef701551b9b0b9e98d6f30ce0","typeString":"literal_string \"blockhash(n) failed\""}],"id":21,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"868:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"868:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"868:40:1"},{"expression":{"argumentTypes":null,"id":32,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":28,"name":"s_blockhashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"914:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":30,"indexExpression":{"argumentTypes":null,"id":29,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"928:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"914:16:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":31,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"933:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"914:20:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":33,"nodeType":"ExpressionStatement","src":"914:20:1"}]},"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"625:171:1","text":"@notice stores blockhash of a given block, assuming it is available through BLOCKHASH\n@param n the number of the block whose blockhash should be stored"},"functionSelector":"6057361d","implemented":true,"kind":"function","modifiers":[],"name":"store","overrides":null,"parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","overrides":null,"scope":35,"src":"814:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"814:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"813:11:1"},"returnParameters":{"id":14,"nodeType":"ParameterList","parameters":[],"src":"832:0:1"},"scope":104,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":47,"nodeType":"FunctionDefinition","src":"1043:70:1","nodes":[],"body":{"id":46,"nodeType":"Block","src":"1077:36:1","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":43,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":40,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1089:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","referencedDeclaration":null,"src":"1089:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"323536","id":42,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1104:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"1089:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":39,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"1083:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1083:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":45,"nodeType":"ExpressionStatement","src":"1083:25:1"}]},"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"944:96:1","text":"@notice stores blockhash of the earliest block still available through BLOCKHASH."},"functionSelector":"83b6d6b7","implemented":true,"kind":"function","modifiers":[],"name":"storeEarliest","overrides":null,"parameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"1065:2:1"},"returnParameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"1077:0:1"},"scope":104,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":79,"nodeType":"FunctionDefinition","src":"1483:1202:1","nodes":[],"body":{"id":78,"nodeType":"Block","src":"1549:1136:1","nodes":[],"statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":57,"name":"header","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"1573:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":56,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1563:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1563:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":59,"name":"s_blockhashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"1584:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":63,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":60,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1598:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":61,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1602:1:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1598:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1584:20:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1563:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"6865616465722068617320756e6b6e6f776e20626c6f636b68617368","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1606:30:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_e72729aef03ec384bb59db8c3284afd557374d3610d961dcbeb575d1b023635d","typeString":"literal_string \"header has unknown blockhash\""},"value":"header has unknown blockhash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e72729aef03ec384bb59db8c3284afd557374d3610d961dcbeb575d1b023635d","typeString":"literal_string \"header has unknown blockhash\""}],"id":55,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1555:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1555:82:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67,"nodeType":"ExpressionStatement","src":"1555:82:1"},{"assignments":[69],"declarations":[{"constant":false,"id":69,"mutability":"mutable","name":"parentHash","nodeType":"VariableDeclaration","overrides":null,"scope":78,"src":"2408:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":68,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2408:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":70,"initialValue":null,"nodeType":"VariableDeclarationStatement","src":"2408:18:1"},{"AST":{"nodeType":"YulBlock","src":"2441:204:1","statements":[{"nodeType":"YulAssignment","src":"2449:36:1","value":{"arguments":[{"arguments":[{"name":"header","nodeType":"YulIdentifier","src":"2473:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"2481:2:1","type":"","value":"36"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:1"},"nodeType":"YulFunctionCall","src":"2469:15:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2463:5:1"},"nodeType":"YulFunctionCall","src":"2463:22:1"},"variableNames":[{"name":"parentHash","nodeType":"YulIdentifier","src":"2449:10:1"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":52,"isOffset":false,"isSlot":false,"src":"2473:6:1","valueSize":1},{"declaration":69,"isOffset":false,"isSlot":false,"src":"2449:10:1","valueSize":1}],"id":71,"nodeType":"InlineAssembly","src":"2432:213:1"},{"expression":{"argumentTypes":null,"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":72,"name":"s_blockhashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2651:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":74,"indexExpression":{"argumentTypes":null,"id":73,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"2665:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2651:16:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":75,"name":"parentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"2670:10:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2651:29:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":77,"nodeType":"ExpressionStatement","src":"2651:29:1"}]},"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"1117:363:1","text":"@notice stores blockhash after verifying blockheader of child/subsequent block\n@param n the number of the block whose blockhash should be stored\n@param header the rlp-encoded blockheader of block n+1. We verify its correctness by checking\n  that it hashes to a stored blockhash, and then extract parentHash to get the n-th blockhash."},"functionSelector":"fadff0e1","implemented":true,"kind":"function","modifiers":[],"name":"storeVerifyHeader","overrides":null,"parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","overrides":null,"scope":79,"src":"1510:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":52,"mutability":"mutable","name":"header","nodeType":"VariableDeclaration","overrides":null,"scope":79,"src":"1521:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":51,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"1509:32:1"},"returnParameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"1549:0:1"},"scope":104,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":103,"nodeType":"FunctionDefinition","src":"2864:173:1","nodes":[],"body":{"id":102,"nodeType":"Block","src":"2929:108:1","nodes":[],"statements":[{"assignments":[88],"declarations":[{"constant":false,"id":88,"mutability":"mutable","name":"h","nodeType":"VariableDeclaration","overrides":null,"scope":102,"src":"2935:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":87,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":92,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":89,"name":"s_blockhashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2947:13:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":91,"indexExpression":{"argumentTypes":null,"id":90,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"2961:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2947:16:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2935:28:1"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":94,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"2977:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"307830","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2982:3:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"},"src":"2977:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"626c6f636b68617368206e6f7420666f756e6420696e2073746f7265","id":97,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2987:30:1","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_f2ccae2c8323e6d447d0a052ada5f2bb4ed07d4f8197923af250c4609a18b7fd","typeString":"literal_string \"blockhash not found in store\""},"value":"blockhash not found in store"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2ccae2c8323e6d447d0a052ada5f2bb4ed07d4f8197923af250c4609a18b7fd","typeString":"literal_string \"blockhash not found in store\""}],"id":93,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2969:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2969:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":99,"nodeType":"ExpressionStatement","src":"2969:49:1"},{"expression":{"argumentTypes":null,"id":100,"name":"h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"3031:1:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":86,"id":101,"nodeType":"Return","src":"3024:8:1"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"2689:172:1","text":"@notice gets a blockhash from the store. If no hash is known, this function reverts.\n@param n the number of the block whose blockhash should be returned"},"functionSelector":"e9413d38","implemented":true,"kind":"function","modifiers":[],"name":"getBlockhash","overrides":null,"parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","overrides":null,"scope":103,"src":"2886:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"2886:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2885:11:1"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":103,"src":"2920:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":84,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2920:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"2919:9:1"},"scope":104,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"56:487:1","text":"@title BlockhashStore\n@notice This contract provides a way to access blockhashes older than\n  the 256 block limit imposed by the BLOCKHASH opcode.\n  You may assume that any blockhash stored by the contract is correct.\n  Note that the contract depends on the format of serialized Ethereum\n  blocks. If a future hardfork of Ethereum changes that format, the \n  logic in this contract may become incorrect and an updated version \n  would have to be deployed."},"fullyImplemented":true,"linearizedBaseContracts":[104],"name":"BlockhashStore","scope":105}]},"id":1}